//
//  ViewController.swift
//  Tipr
//
//  Created by Auster Chen on 8/20/17.
//  Copyright Â© 2017 Auster Chen. All rights reserved.
//

import UIKit

class ViewController: UIViewController {

    @IBOutlet weak var billField: UITextField!
    @IBOutlet weak var bottomContainerConstraint: NSLayoutConstraint!
    @IBOutlet weak var tipWrapperView: UIView!
    @IBOutlet weak var tipDetailsView: UIView!
    var tipPercentages = [0.18, 0.20, 0.22]
    var isShowingDetails = false
    var billFieldCenterYAnchorConstraint: NSLayoutConstraint?
    var billFieldTopAnchorConstraint: NSLayoutConstraint?
    var tipPercentageControl: UISegmentedControl!

    @IBOutlet weak var totalAmountLabel: UILabel!
    @IBOutlet weak var tipAmountLabel: UILabel!
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        print("view will appear")
        tipPercentageControl = UISegmentedControl()
        tipPercentageControl.translatesAutoresizingMaskIntoConstraints = false
        tipPercentageControl.insertSegment(withTitle: "18%", at: 0, animated: true)
        tipPercentageControl.insertSegment(withTitle: "20%", at: 1, animated: true)
        tipPercentageControl.insertSegment(withTitle: "22%", at: 2, animated: true)
        tipPercentageControl.selectedSegmentIndex = 1
        tipPercentageControl.isHidden = true
        tipWrapperView.addSubview(tipPercentageControl)
        tipDetailsView.topAnchor.constraint(equalTo: tipPercentageControl.bottomAnchor, constant: 16).isActive = true
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        print("view did load")
        // Do any additional setup after loading the view, typically from a nib.
        NotificationCenter.default.addObserver(self, selector: #selector(ViewController.keyboardWillChangeFrame(_:)), name: NSNotification.Name.UIKeyboardWillChangeFrame, object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(ViewController.keyboardWillHide(_:)), name: NSNotification.Name.UIKeyboardWillHide, object: nil)
        billField.translatesAutoresizingMaskIntoConstraints = false
        billFieldCenterYAnchorConstraint = billField.centerYAnchor.constraint(equalTo: tipWrapperView.centerYAnchor)
        billFieldCenterYAnchorConstraint?.isActive = true
    }

    deinit {
        NotificationCenter.default.removeObserver(self)
    }

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        billField.becomeFirstResponder()
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    @IBAction func onChangeBillField(_ sender: Any) {
        let text =  billField.text ?? nil
        if ((text) != nil && text!.characters.count > 0) {
            // TODO handle error if text is not a number
            showBillDetails(amount: Double(text!)!)
        } else {
            hideBillDetails()
        }
    }

    @IBAction func onTap(_ sender: Any) {
    }

    func showBillDetails(amount: Double) {
        if (!isShowingDetails) {
            isShowingDetails = true;
            //create details subview and animate into place
            
            tipPercentageControl.topAnchor.constraint(equalTo: billField.bottomAnchor, constant: 16).isActive = true
            tipPercentageControl.leadingAnchor.constraint(equalTo: tipWrapperView.leadingAnchor, constant: 0).isActive = true
            tipPercentageControl.trailingAnchor.constraint(equalTo: tipWrapperView.trailingAnchor, constant: 0).isActive = true
            tipPercentageControl.isHidden = false
            tipPercentageControl.alpha = 0.0
            tipDetailsView.isHidden = false
            tipDetailsView.alpha = 0.0
            self.view.layoutIfNeeded()

            billFieldCenterYAnchorConstraint?.isActive = false
            billFieldTopAnchorConstraint = billField.topAnchor.constraint(equalTo: tipWrapperView.topAnchor, constant: 16)
            billFieldTopAnchorConstraint?.isActive = true
            
            UIView.animate(
                withDuration: TimeInterval(0.25),
                delay: 0,
                options: UIViewAnimationOptions.curveEaseOut,
                animations: {
                    self.tipPercentageControl.alpha = 1.0
                    self.tipDetailsView.alpha = 1.0
                    self.view.layoutIfNeeded()
                }
            )
        }

        let selectedTipPercent = tipPercentages[tipPercentageControl.selectedSegmentIndex]
        let tip = amount * selectedTipPercent
        let total = amount + tip
        tipAmountLabel.text = String(format: "$%.2f", tip)
        totalAmountLabel.text = String(format: "$%.2f", total)
    }

    func hideBillDetails() {
        if (isShowingDetails) {
            isShowingDetails = false
            
            //destroy details subview and animate back into place
            billFieldCenterYAnchorConstraint?.isActive = true
            billFieldTopAnchorConstraint?.isActive = false
            tipPercentageControl.isHidden = true
            tipDetailsView.isHidden = true
            
            UIView.animate(
                withDuration: TimeInterval(0.25),
                delay: 0,
                options: UIViewAnimationOptions.curveEaseOut,
                animations: { self.view.layoutIfNeeded() }
            )
        }
    }
    
    func keyboardWillHide(_ notification: Notification) {
        bottomContainerConstraint.constant = 32
    }

    func keyboardWillChangeFrame(_ notification: Notification) {
        let keyboardSize = (notification.userInfo![UIKeyboardFrameEndUserInfoKey] as! NSValue).cgRectValue.size
        let animationDuration  = notification.userInfo![UIKeyboardAnimationDurationUserInfoKey] as! NSNumber
        let animationCurveRawNSN = notification.userInfo![UIKeyboardAnimationCurveUserInfoKey] as? NSNumber
        let animationCurveRaw = animationCurveRawNSN?.uintValue ?? UIViewAnimationOptions.curveEaseInOut.rawValue
        let animationCurve:UIViewAnimationOptions = UIViewAnimationOptions(rawValue: animationCurveRaw)
        bottomContainerConstraint.constant = keyboardSize.height + 32
        UIView.animate(
            withDuration: TimeInterval(animationDuration),
            delay: 0,
            options: animationCurve,
            animations: { self.view.layoutIfNeeded() },
            completion: nil
        )
    }
}






























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































